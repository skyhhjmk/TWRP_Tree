name: Make TWRP Device (Android 15 Optimized)

on:
  workflow_dispatch:
    inputs:
      IMGURL:
        description: 'URL of initboot.img (Android 15 REQUIRED)'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download initboot.img
      run: |
        curl -L -o initboot.img "${{ github.event.inputs.IMGURL }}"
        echo "Downloaded initboot.img:"
        file initboot.img

    - name: Cache NDK
      id: cache-ndk
      uses: actions/cache@v4
      with:
        path: android-ndk-r25b
        key: ndk-r25b-${{ runner.os }}-${{ hashFiles('Magisk/build.py') }}
        restore-keys: ndk-r25b-${{ runner.os }}-

    - name: Install NDK
      if: steps.cache-ndk.outputs.cache-hit != 'true'
      run: |
        curl -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
        unzip -q ndk.zip
        rm ndk.zip

    - name: Clone Magisk
      run: git clone https://github.com/topjohnwu/Magisk.git --recurse-submodules

    - name: Initialize submodules
      working-directory: Magisk
      run: git submodule update --init --recursive

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: armv7-linux-androideabi,aarch64-linux-android,i686-linux-android,x86_64-linux-android

    - name: Build Magiskboot
      working-directory: Magisk
      env:
        ANDROID_NDK_HOME: ${{ github.workspace }}/android-ndk-r25b
        NDK: ${{ github.workspace }}/android-ndk-r25b
      run: |
        export PATH="$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"
        ./build.py native

    - name: Verify magiskboot
      working-directory: Magisk
      run: |
        ls -la native/out/
        file native/out/magiskboot
        native/out/magiskboot --version

    - name: Unpack initboot.img
      run: |
        mkdir -p unpacked
        cd unpacked
        ../Magisk/native/out/magiskboot unpack ../initboot.img
        echo "Unpacked files:"
        ls -la

    - name: Extract device tree
      run: |
        mkdir -p device-tree
        cd unpacked
        if [ -f "ramdisk.cpio" ]; then
          echo "Extracting from ramdisk.cpio"
          ../Magisk/native/out/magiskboot cpio ramdisk.cpio extract "../device-tree"
        elif [ -f "boot.img" ]; then
          echo "Extracting from boot.img"
          ../Magisk/native/out/magiskboot unpack boot.img
          ../Magisk/native/out/magiskboot cpio ramdisk.cpio extract "../device-tree"
        else
          echo "Error: No valid boot image found"
          exit 1
        fi
        echo "Device tree contents:"
        ls -la ../device-tree

    - name: Repack initboot.img
      run: |
        cd unpacked
        ../Magisk/native/out/magiskboot repack ../initboot.img new-initboot.img
        echo "Repacked image:"
        file new-initboot.img
        mv new-initboot.img ../

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: twrp-device-tree
        path: |
          device-tree/
          new-initboot.img
        retention-days: 30

    - name: Generate build info
      run: |
        echo "## Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Source**: ${{ github.event.inputs.IMGURL }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Magiskboot**: Compiled from source" >> $GITHUB_STEP_SUMMARY
        echo "- **Build date**: $(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_STEP_SUMMARY
        echo "- **Screen**: 1272x2800 @ 560dpi" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
