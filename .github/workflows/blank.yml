
```yaml
name: Make TWRP Device (Android 15 Optimized)

on:
  workflow_dispatch:
    inputs:
      IMG_URL:
        description: 'URL of init_boot.img (Android 15 REQUIRED)'
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          sudo apt update -qq
          sudo apt install -y python3 cpio lz4 unzip wget git build-essential zlib1g-dev
          # 安全创建 Python 符号链接
          if [ ! -L /usr/bin/python ]; then
            sudo ln -s /usr/bin/python3 /usr/bin/python
          else
            echo "Python symlink exists"
          fi

      - name: Build Magiskboot from Source
        run: |
          # 克隆官方仓库
          git clone --depth=1 https://github.com/topjohnwu/Magisk.git
          cdwu/Magisk.git
          cd Magisk
          
          # 安装 NDK
          wget -q https://dl.google.com/android/repository/android-ndk-r25c-linux.zip
          unzip -q android-ndk-r25c-linux.zip
          export ANDROID_NDK_HOME=$(pwd)/android-ndk-r25c
          
          # 编译 magiskboot（在仓库根目录运行）
          ./build.py ndk
          
          # 安装 magiskboot - 新路径在 out/.magisk/boot/
          chmod +x out/.magisk/boot/magiskboot
          sudo mv out/.magisk/boot/magiskboot /usr/local/bin/
          cd ..
          magiskboot --version

      - name: Download init_boot.img
        run: |
          wget -O init_boot.img "${{ github.event.inputs.IMG_URL }}"
          file init_boot.img

      - name: Extract and Process Ramdisk
        run: |
          magiskboot unpack init_boot.img || { echo "Magiskboot unpack failed"; ls; exit 1; }
          
          if [ ! -f ramdisk.cpio ]; then
            echo "##[error]ramdisk.cpio not found"
           disk.cpio not found"
            exit 1
          fi
          
          mkdir -p recovery/root
          cd recovery/root
          cpio -idm -v --no-absolute-filenames < ../../ramdisk.cpio 2>&1 | tee cpio.log
          
          # 递归解压嵌套CPIO
          find . -name "*.cpio" -exec sh -c '
            for f; do
              echo "Processing nested CPIO: $f"
              d=$(dirname "$f")
              cd "$d"
              mkdir -p tmp
              mv "$(basename "$f")" tmp/
              cd tmp
              cpio -idm -v < * 2>&1 | tee nested.log
              chmod -R u+rwX .
              mv * ../
              cd ..
              rm -rf tmp
              cd -
            done
          ' sh {} +

      - name: Generate Device Tree
        run: |
          pip3 install twrpdtgen
          python3 -m twrpdtgen --root recovery/root -o dt || { echo "TWRPdtgen failed"; exit WRPdtgen failed"; exit 1; }
          
          # 自动填充BoardConfig
          DEVICE_DIR=$(find dt -maxdepth 1 -type d -name "*_*" | head -1)
          if [ -z "$DEVICE_DIR" ]; then
            echo "##[error]Device directory not found"
            exit 1
          fi
          
          echo "BOARD_RECOVERYIMAGE_PARTITION_SIZE := $(stat -c%s init_boot.img)" >> $DEVICE_DIR/BoardConfig.mk
          echo 'TW_THEME := portrait_hdpi' >> $DEVICE_DIR/BoardConfig.mk
          echo 'TW_EXCLUDE_DEFAULT_USB_INIT := true' >> $DEVICE_DIR/BoardConfig.mk
          echo 'DEVICE_RESOLUTION := 1080x2400' >> $DEVICE_DIR/BoardConfig.mk
          echo 'TW_EXTRA_LANGUAGES := true' >> $DEVICE_DIR/BoardConfig.mk
          echo 'TW_INCLUDE_CRYPTO := true' >> $DEVICE_DIR/BoardConfig.mk
          echo 'TW_USE_TOOLBOX := true' >> $DEVICE_DIR/BoardConfig.mk

      - name: Zip Artifacts
        run: |
          zip -r DeviceTree.zip dt/
          ls -lh DeviceTree.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TWRP-DeviceTree-Android15
          path: |
            DeviceTree.zip
            recovery/root/cpio.log
          retention-days: 3

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: DeviceTree.zip
          tag_name: android15-${{ github.run_id }}
          body: |
            Auto-generated TWRP device tree for Android 15
            Source: ${{ github.event.inputs.IMG_URL }}
            Magiskboot: Compiled from source
            Build date: $(date +"%Y-%m-%d %H:%M:%S")
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
